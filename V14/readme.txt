解决传递中文问题。
上一个版本已经实现了注册业务。但是有一个问题:如果在页面的输入框中输入中文信息，则浏览器在提交数据时
该输入框的内容都变成了%XX这样的内容。
例如:
/myweb/regUser?username=%E8%8C%83%E4%BC%A0%E5%A5%87&password=123456&nickname=chuanqi&age=22

原因:
抽象路径会包含在请求的请求行中，而HTTP协议要求请求行的内容是文本，并且使用的字符集只能是ISO8859-1
而这个字符集不支持中文，因此中文不能直接拼接在uri中传给给服务端。

解决办法:
浏览器会现将中文部分按照页面指定的字符集转换为一组字节(按照页面中meta指定的字符集)
注:页面上我们在<head>中使用<meta charset="UTF-8">告知浏览器当前字符集是UTF-8的

例如:注册页面中用户名输入框我们输入中文:范传奇
在提交表单时，浏览器会做如下操作:
1:先将中文"范传奇"按照UTF-8编码转换为一组字节(UTF-8编码每个中文3字节，因此会转换9个字节)
2:如果用数字1和0表示转换后的9字节的2进制，则长度太大，就好比抽象路径内容会变为:
  /myweb/regUser?username=101001010101010101001...&password=123456&nickname=....
  此时username中用数字1和0表示的2进制要有72位
  传输的内容越多，传输速度越慢。
  因此为了解决长度问题，采取使用2位16进制来表示一个8位2进制(毕竟16进制的内容也可以用英文和数字表示)

下面是2进制与16进制的对应关系
2进制         10进制            16进制
0000            0               0
0001            1               1
0010            2               2
0011            3               3
0100            4               4
0101            5               5
0110            6               6
0111            7               7
1000            8               8
1001            9               9
1010            10              A
1011            11              B
1100            12              C
1101            13              D
1110            14              E
1111            15              F

例如:8位2进制就可以用2位16进制表示来缩短长度
11010011  1字节的2进制内容
D3        上述内容可以用2位16进制表示

因此传递中文时如果用16进制传递2进制信息，则长度会大大缩减，例如:
/myweb/regUser?username=E3FFD143211F5D4C1A&password=123456&nickname=....
意味着18个英文和数字的组合就可以表示9字节的2进制内容了。相较于用数字1和0组成的72个字符缩短了很多

新问题:
如果该用户写的英文名叫AAB1C3
/myweb/regUser?username=AAB1C3&password=123456&nickname=....
此时会出现服务端无法区分该内容到底表示的就是英文数字还是16进制的字节数据。

因此URL格式定义要求，如果传递的是16进制表示的字节时，要在2位16进制前必须添加一个"%"
如果该用户名字就是AAB1C3则直接拼接，如下:
/myweb/regUser?username=AAB1C3&password=123456&nickname=....

如果用户名是中文转换的字节，则拼接是16进制内容要添加%，如下
/myweb/regUser?username=%AA%B1%C3&password=123456&nickname=....
此时上面内容表示的就是3个字节的2进制数据了

URL中如果出现了用户提交内容时存在"?","%"这样的关键字符，要求将其转换为"%XX"表示










